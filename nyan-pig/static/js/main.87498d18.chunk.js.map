{"version":3,"sources":["line/line-geometry.js","line/line-shader-frag.js","line/line-shader-vert.js","line/line-shader.js","line/line.js","star.js","stars.js","scene.js","ticker.js","App.js","serviceWorker.js","index.js"],"names":["LineGeometry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","points","index","iCount","i","push","Math","sin","doubleUpArray","directionArray","distArray","uvsArray","length","data","PIXI","from","addAttribute","addIndex","drawMode","TRIANGLE_STRIP","buffer","getBuffer","uvsBuffer","directionBuffer","distBuffer","indexBuffer","getIndex","x","count","lx","ly","y","disty","dx","dy","sqrt","posArray","Float32Array","uvArray","dirArray","disArray","indexArray","Uint16Array","update","start","size","line_shader_frag","line_shader_vert","LineShader","options","vert","frag","thickness","uRainbow","arguments","undefined","Line","geometry","shader","state","depthTest","culling","skip","visible","get","prototype","window","renderer","Star","anchor","set","scale","tick","floor","random","life","shapes","position","dist","ind","texture","concat","Stars","cellWidth","cellHeight","removeChildren","currentCol","l","nbLines","c","posX","posY","console","log","sprite","addChild","nbColumn","w","h","clear","create","Scene","app","_onMove","e","pt","getLocalPosition","view","pigzbe","width","stage","PixelateFilter","gap","interactive","mousemove","touchmove","background","WHITE","tint","stars","line","filter","filters","prevX","prevY","height","nbPoints","resize","Ticker","onUpdate","Signal","updateBind","bind","active","deltaTime","timeElapsed","lastTime","speed","requestAnimationFrame","currentTime","Date","getTime","dispatch","listener","scope","add","remove","instance","App","React","createRef","scene","current","innerWidth","innerHeight","onLoaderComplete","addEventListener","useEffect","backgroundColor","resolution","transparent","autoResize","antialias","document","getElementById","appendChild","loader","shared","onComplete","load","react_default","a","createElement","className","id","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87498d18.chunk.js","sourcesContent":["\nimport * as PIXI from 'pixi.js'\n\nexport default class LineGeometry extends PIXI.Geometry {\n  constructor () {\n    super()\n\n    let points = []\n\n    let index = []\n    let iCount = 0\n\n    let half = 0.1 * 150\n\n    for (let i = 0; i < 4; i++) {\n      points.push((i * 0.1) - half, Math.sin(i * 0.1) * 10)\n\n      index.push(iCount++, iCount++)\n    }\n\n    let doubleUpArray = []\n    let directionArray = []\n    let distArray = []\n    let uvsArray = []\n\n    doubleUpArray.push(points[0], points[1])\n    doubleUpArray.push(points[0], points[1])\n    uvsArray.push(0, 0)\n    directionArray.push(-1, 1)\n\n    for (let i = 0; i < points.length; i += 2) {\n      doubleUpArray.push(points[i], points[i + 1])\n      doubleUpArray.push(points[i], points[i + 1])\n\n      directionArray.push(-1, 1)\n      uvsArray.push(i / points.length, i / points.length)\n      distArray.push(i, i)\n    }\n\n    let i = points.length / 2\n    i -= 3 * 2\n\n    doubleUpArray.push(points[i], points[i + 1])\n    doubleUpArray.push(points[i], points[i + 1])\n\n    uvsArray.push(i / points.length, i / points.length)\n    directionArray.push(-1, 1)\n    distArray.push(i, i)\n\n    let data = PIXI.Buffer.from(doubleUpArray)\n\n    this\n      .addAttribute('direction', directionArray, 1)\n      .addAttribute('aUv', uvsArray, 1)\n      .addAttribute('dist', distArray, 1)\n      .addAttribute('position', data, 2, null, null, 0, 4 * 4)\n      .addAttribute('next', data, 2, null, null, 0, 8 * 4)\n      .addAttribute('prev', data, 2, null, null, 0, 0)\n      .addIndex(index)// [0, 1, 2, 3, 4, 5])\n\n    this.drawMode = PIXI.DRAW_MODES.TRIANGLE_STRIP\n  }\n\n  update (points) {\n    if (points.length < 4) return\n\n    let buffer = this.getBuffer('position')\n    let uvsBuffer = this.getBuffer('aUv')\n    let directionBuffer = this.getBuffer('direction')\n    let distBuffer = this.getBuffer('dist')\n    let indexBuffer = this.getIndex()\n\n    let uvsArray = []\n    let doubleUpArray = []\n    let directionArray = []\n    let distArray = []\n    let index = []\n\n    doubleUpArray.push(points[0], points[1])\n    doubleUpArray.push(points[2].x, points[3])\n    uvsArray.push(0, 0)\n    directionArray.push(-1, 1)\n\n    let count = 0\n\n    for (let i = 0; i < points.length; i += 2) {\n      doubleUpArray.push(points[i], points[i + 1])\n      doubleUpArray.push(points[i], points[i + 1])\n      directionArray.push(-1, 1)\n      uvsArray.push(i / (points.length / 2), i / (points.length / 2))\n\n      index.push(count++, count++)\n    }\n\n    distArray.push(0, 0)\n\n    let lx = points[0].x\n    let ly = points[0].y\n\n    let disty = 0\n\n    for (let i = 1; i < points.length; i += 2) {\n      let x = points[i]\n      let y = points[i + 1]\n\n      let dx = x - lx\n      let dy = y - ly\n      let segDist = Math.sqrt(dx * dx + dy * dy)\n      disty += segDist\n      lx = x\n      ly = y\n\n      distArray.push(disty / 100, disty / 100)\n    }\n\n    let i = points.length / 2\n    i -= 2\n\n    doubleUpArray.push(points[i], points[i + 1])\n    doubleUpArray.push(points[i], points[i + 1])\n    uvsArray.push(i / (points.length / 2), i / (points.length / 2))\n    directionArray.push(-1, 1)\n\n    distArray.push(disty / 100000, disty / 100000)\n\n    let posArray = new Float32Array(doubleUpArray)\n    let uvArray = new Float32Array(uvsArray)\n    let dirArray = new Float32Array(directionArray)\n    let disArray = new Float32Array(distArray)\n    let indexArray = new Uint16Array(index)\n\n    buffer.update(posArray)\n    directionBuffer.update(dirArray)\n    uvsBuffer.update(uvArray)\n    distBuffer.update(disArray)\n    indexBuffer.update(indexArray)\n\n    this.start = 2\n    this.size = index.length - 2\n  }\n\n  reset () {\n    // /this.size = 3;\n  }\n}\n","export default `\n  // uniform vec3 uColors[5];\n  uniform sampler2D uRainbow;\n\n  varying float vUv;\n  varying vec2 uv;\n\n  void main()\n  {\n    // keep this for legacy, as this is a cool way to do a rainbow!\n    float s = floor( uv.y * 5. ) / 5.;\n    float i = s / (1.0 / 5.0);\n    int ind = int(i);\n\n    vec3 c = texture2D(uRainbow, vec2(0., s)).rgb;\n    // vec3 c = uColors[0];\n    // if (ind == 0) {\n    //   c = uColors[0];\n    // } else if (ind == 1) {\n    //   c = uColors[2];\n    // } else if (ind == 2) {\n    //   c = uColors[2];\n    // } else if (ind == 3) {\n    //   c = uColors[3];\n    // } else if (ind == 4) {\n    //   c = uColors[4];\n    // }\n\n    // float stripe = mod(floor(uv.y * 4.), 2.);\n    // vec3 c = mix(vec3(1., 1., 1.), vec3(1., 0.8235, 1.0), stripe);\n    // float edge = pow(vUv, 1.0);\n    // float alpha = clamp(edge * .6, 0.0, 1.0);\n    gl_FragColor = vec4(c, 1.0);\n    // gl_FragColor *= alpha;\n  }\n`\n","export default `\nattribute float aUv;\nattribute vec2 position;\nattribute float direction;\nattribute float dist;\nattribute vec2 next;\nattribute vec2 prev;\n\nvarying float vUv;\nvarying vec2 uv;\nvarying vec2 uv2;\nvarying vec2 normals;\nvarying float vThickness;\n\nuniform sampler2D target;\n\nuniform mat3 translationMatrix;\nuniform mat3 projectionMatrix;\nuniform float time;\nuniform float thickness;\n\nvoid main()\n{\n    vUv = aUv;\n    vec2 nextScreen = next; /// nexP.w * aspectVec;\n    vec2 posScreen = position; /// posP.w * aspectVec;\n    vec2 prevScreen = prev;\n\n    vec2 dir;\n\n    if (posScreen == prevScreen)\n    {\n    dir = normalize(nextScreen - posScreen);\n  }\n  else if (posScreen == nextScreen)\n  {\n    dir = normalize(posScreen - prevScreen);\n  }\n  else\n  {\n    //get directions from (C - B) and (B - A)\n    vec2 dirA = normalize((posScreen - prevScreen));\n    vec2 dirB = normalize((nextScreen - posScreen));\n    dir = normalize(dirA + dirB);\n  }\n\n  vec2 normal = vec2(-dir.y, dir.x);\n\n  normals = normal;\n\n  posScreen += normal * direction * thickness;// * 10.;\n\n  float d = sign(direction) ;// + 0.5;\n  d += 1.;\n  d *= 0.5;\n\n  uv = vec2(dist, d );//*0.5) )+0.5);//(1./direction/2.) + 0.5);\n  uv.x /= 2.;\n  uv2 /= 2.;\n  uv2.x += 0.5;\n  uv2 = posScreen/vec2(1680., 464.);\n\n  vThickness = abs(direction * thickness);\n\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(posScreen, 1.0)).xy, 0.0, 1.0);\n}\n`\n","import * as PIXI from 'pixi.js'\nimport frag from './line-shader-frag'\nimport vert from './line-shader-vert'\n\nexport default class LineShader extends PIXI.Shader {\n  constructor (options) {\n    super(PIXI.Program.from(vert, frag), {\n      thickness: 60,\n      uRainbow: PIXI.Texture.from('rainbow')\n    })\n  }\n\n  init (options = {}) {\n  }\n}\n","import * as PIXI from 'pixi.js'\nimport LineGeometry from './line-geometry'\nimport LineShader from './line-shader'\n\nexport default class Line extends PIXI.Mesh {\n  constructor (options) {\n    const geometry = new LineGeometry(options)\n    const shader = new LineShader(options)\n    super(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLE_STRIP)\n    this.state.depthTest = false\n    this.state.culling = false\n    this.skip = true\n  }\n\n  update (points) {\n    this.geometry.update(points)\n    this.size = this.geometry.indexBuffer.data.length - 2\n\n    this.visible = points.length > 4\n  }\n\n  _render () {\n    if (this.skip) {\n      this.skip = false\n    } else {\n      super._render(window.renderer)\n    }\n  }\n}\n","import * as PIXI from 'pixi.js'\n\nexport default class Star extends PIXI.Sprite {\n  constructor () {\n    super(PIXI.Texture.from('shapes/shape1.png'))\n    this.anchor.set(.5)\n    this.scale.set(.5)\n    this.tick = Math.floor(Math.random() * 100)\n    this.life = Math.floor(Math.random() * 20 + 10)\n    this.shapes = [\n      'shape5.png',\n      'shape4.png',\n      'shape3.png',\n      'shape2.png',\n      'shape1.png',\n      'shape5.png',\n      'shape4.png',\n      'shape3.png',\n      'shape2.png',\n      'shape1.png',\n      'pig.png'\n    ]\n  }\n\n  updateTransform() {\n    super.updateTransform()\n\n    this.tick++\n    this.position.x -= 4\n\n    if (this.position.x < 0) {\n      this.position.x += this.dist * 2\n    }\n    if (this.tick % this.life === 0) {\n      let ind = Math.floor(Math.random() * this.shapes.length)\n      this.texture = PIXI.Texture.from(`shapes/${this.shapes[ind]}`)\n    }\n  }\n}","import * as PIXI from 'pixi.js'\nimport Star from './star'\n\nexport default class Stars extends PIXI.Container {\n  constructor () {\n    super()\n\n    this.cellWidth = 200\n    this.cellHeight = 180\n\n\n\n  }\n\n  clear() {\n    this.removeChildren()\n  }\n\n  create() {\n    let currentCol = 0\n    for (let l = 0; l < this.nbLines; l ++) {\n      let spaceBetweenC = 3\n\n      for (let c = 0; c < 3; c++) {\n        let posX = (currentCol + c * spaceBetweenC) * this.cellWidth\n        let posY = l * this.cellHeight\n        console.log('here', posX, posY);\n        \n        let sprite = new Star()\n        sprite.dist = (currentCol + 2 * spaceBetweenC) * this.cellWidth\n        sprite.position.x = posX\n        sprite.position.y = posY + 100\n        this.addChild(sprite)\n      }\n\n      currentCol += 2 + Math.floor(Math.random() * 2) \n      currentCol %= this.nbColumn\n\n    }\n  }\n\n  resize (w, h) {\n    this.nbLines = Math.floor(h / this.cellHeight)\n    this.nbColumn = Math.floor(w / this.cellWidth)\n\n    this.clear()\n    this.create()\n  }\n}","import * as PIXI from 'pixi.js'\nimport Line from './line/line'\nimport Stars from './stars'\nimport { PixelateFilter } from 'pixi-filters'\n\nexport default class Scene {\n  constructor (app) {\n    this.view = app.stage\n\n    console.log('PixelateFilter', PixelateFilter);\n    \n    this.gap = 10\n\n    this.view.interactive = true\n    this.view.mousemove = this.view.touchmove = this._onMove\n    this.background = new PIXI.Sprite(PIXI.Texture.WHITE)\n    this.background.tint = 0x0E4572\n    this.view.addChild(this.background)\n    window.PIXI = PIXI\n\n    this.points = []\n\n    this.stars = new Stars()\n    this.view.addChild(this.stars)\n    \n    this.line = new Line()\n    this.view.addChild(this.line)\n\n    this.pigzbe = PIXI.Sprite.from('pigzbe.png')\n    this.pigzbe.anchor.set(.5)\n    this.pigzbe.scale.set(.75)\n    this.view.addChild(this.pigzbe)\n\n\n    let filter = new PixelateFilter(5)\n    this.view.filters = [filter]\n  }\n\n  _onMove = (e) => {    \n    let pt = e.data.getLocalPosition(this.view)\n    \n    this.points[this.points.length - 1] = pt.y\n    this.points[this.points.length - 2] = pt.x\n\n    this.pigzbe.position.x = pt.x + this.pigzbe.width / 4\n    this.pigzbe.position.y = pt.y + 8\n  }\n\n  update () {\n\n    for (let i = this.points.length - 3; i > -1; i-=2) {\n      // let x = this.points[i-1]\n      \n      let y = this.points[i]\n      let prevX = this.points[i-1 + 2]\n      let prevY = this.points[i + 2]\n\n      this.points[i-1] += (prevX - this.gap - this.points[i - 1]) * .6\n      this.points[i] += (prevY - this.points[i]) * .6\n      \n      \n    }\n    this.line.update(this.points)\n  }\n\n  resize (w, h) {\n    this.background.width = w\n    this.background.height = h\n\n    let nbPoints = w / this.gap\n    for (let i = 0; i < nbPoints; i++) {\n      this.points.push(0, 0) \n    }\n\n    \n    this.line.update(this.points)\n    this.stars.resize(w, h)\n  }\n}","\nimport Signal from 'signals'\n\nclass Ticker {\n  constructor () {\n    this.onUpdate = new Signal()\n    this.updateBind = this.update.bind(this)\n    this.active = false\n    this.deltaTime = 1\n    this.timeElapsed = 0\n    this.lastTime = 0\n    this.speed = 1\n  }\n\n  start () {\n    if (this.active) return\n    this.active = true\n    requestAnimationFrame(this.updateBind)\n  }\n\n  stop () {\n    if (!this.active) return\n    this.active = false\n  }\n\n  update () {\n    if (this.active) {\n      requestAnimationFrame(this.updateBind)\n      var currentTime = new Date().getTime()\n      var timeElapsed = currentTime - this.lastTime\n      if (timeElapsed > 100)timeElapsed = 100\n      this.deltaTime = (timeElapsed * 0.06)\n      this.deltaTime *= this.speed// * 3;\n      this.onUpdate.dispatch(this.deltaTime)\n      this.lastTime = currentTime\n    }\n  }\n\n  add (listener, scope) {\n    this.onUpdate.add(listener, scope)\n  }\n\n  remove (listener, scope) {\n    this.onUpdate.remove(listener, scope)\n  }\n}\n\nTicker.instance = new Ticker()\n\nexport default Ticker\n","import React, { useEffect } from 'react';\nimport * as PIXI from 'pixi.js'\nimport Scene from './scene';\nimport Ticker from './ticker';\nimport './App.css';\n\nfunction App() {\n  \n  let app = React.createRef()\n  let renderer = React.createRef()\n  let scene = React.createRef()\n  function resize() {\n    console.log('here');\n    \n    renderer.current.resize(window.innerWidth, window.innerHeight)\n\n    scene.current.resize(window.innerWidth, window.innerHeight)\n  }\n\n  function update () {\n    scene.current.update()\n  }\n\n  function onLoaderComplete () {\n    window.addEventListener('resize', resize);\n    \n    scene.current = new Scene(app.current)\n\n    Ticker.instance.start()\n    Ticker.instance.add(update)\n\n    resize()\n  }\n\n  useEffect(() => {\n\n    app.current = new PIXI.Application({\n      width: 200,\n      height: 200,\n      backgroundColor: 0xA0EDFF,\n      resolution: 1,\n      transparent: true,\n      autoResize: true,\n      antialias: true\n    });\n\n    window.renderer = renderer.current = app.current.renderer\n    document.getElementById('App').appendChild(app.current.view);\n\n    const loader = PIXI.Loader.shared\n\n\n    loader.add('shape5', './shapes/shape5.png')\n    loader.add('shape4', './shapes/shape4.png')\n    loader.add('shape3', './shapes/shape3.png')\n    loader.add('shape2', './shapes/shape2.png')\n    loader.add('shape1', './shapes/shape1.png')\n    loader.add('pig', './shapes/pig.png')\n    loader.add('heart', 'heart.png')\n    loader.add('rainbow', 'rainbow.jpg')\n    loader.add('pigzbe', 'pigzbe.png')\n    loader.onComplete.add(onLoaderComplete);\n    loader.load()\n    \n  }, [])\n\n  return (\n    <div className=\"App\" id=\"App\">\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}