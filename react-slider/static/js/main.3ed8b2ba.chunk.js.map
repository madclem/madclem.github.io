{"version":3,"sources":["SliderPhotos/index.js","App.js","serviceWorker.js","index.js","SliderPhotos/loading-mark.svg"],"names":["tempObject","tempArray","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onResize","width","containerSlider","current","clientWidth","height","clientHeight","updateComponent","getXMouse","element","evt","rect","getBoundingClientRect","root","document","documentElement","touches","pageX","left","scrollLeft","lastTouchX","clientX","onMouseDown","e","_down","originalX","currentTarget","onMouseMove","x","differenceX","targetX","cameraX","preventDefault","onMouseUp","Math","abs","onKeyDown","keyCode","goTo","update","snap","slider","currentX","parseFloat","style","deltaTime","min","performance","now","lastTime","easeX","ease","items","children","index","length","item","offsetSlider","offsetLeft","currentIndex","nbImages","setImageData","setPointActive","nextFrame","window","requestAnimationFrame","onPointClicked","dataset","state","loading","orignalSizesImages","React","createRef","pointsContainer","_this2","data","currentIndexPoint","addEventListener","urls","getDataUrl","preload","setState","images","cancelAnimationFrame","removeEventListener","resetImages","i","url","img","getElementsByTagName","resizeImage","dim","ratio","max","getNewDimensions","marginLeft","marginTop","stopPropagation","value","arguments","undefined","_this3","imageData","div","innerHTML","inside","createElement","appendChild","src","image","xSlider","indexPoint","round","currentPoint","classList","remove","point","add","_this4","content","map","react_default","a","key","className","onTouchEnd","onClick","data-index","cb","_this5","urlsLoaded","_loop","Image","onload","divStyle","imgLoader","alt","ref","onTouchStart","getPoints","Component","currentState","widthContainer","innerWidth","heightContainer","innerHeight","useHardcodedWidth","hardcodedWidth","useHardcodedHeight","hardcodedHeight","gui","dat","onChange","bind","assertThisInitialized","console","log","src_SliderPhotos","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3ed8b2ba.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/require-default-props */\nimport React, { Component } from 'react';\nimport imgLoader from './loading-mark.svg';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nlet tempObject = {};\nlet tempArray = [];\n\nclass App extends Component {\n    static propTypes = {\n        data: PropTypes.instanceOf(Array),\n        ease: PropTypes.number,\n        height: PropTypes.number,\n        width: PropTypes.number\n    }\n\n    constructor(props) {\n        super(props);\n\n        // TODOS\n        // add an infinite options (to not loop)\n        // add resizing options (for now, cover only)\n        // try on mobile\n        this.state = {\n            loading: true\n        }\n        \n        this.orignalSizesImages = {}; // used to scale correctly images\n        this.slider = React.createRef()\n        this.containerSlider = React.createRef()\n        this.pointsContainer = React.createRef()\n    }\n\n    componentDidMount() {\n        this.data = this.props.data; \n\n        this.nbImages = this.data.length;\n        this.currentIndex = 0;\n        this.currentIndexPoint = null;\n        this.cameraX = 0;\n        this.targetX = 0;\n        this.width = this.props.width;\n        this.height = this.props.height;\n        \n        let needsResize = !this.props.height || !this.props.width;\n        if (needsResize) window.addEventListener('resize', this.onResize);\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchend', this.onMouseUp);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('touchmove', this.onMouseMove);\n        window.addEventListener('keydown', this.onKeyDown);\n\n        // preload the first three images (left, current, right)\n        let urls = [this.getDataUrl(-1), this.getDataUrl(0), this.getDataUrl(1)]\n        this.preload(urls, () => {\n            this.setState({\n                loading: false\n            });\n\n            // noew they're loaded, set the images\n            let images = this.slider.current.children;\n            this.setImageData(images[0], -1);\n            this.setImageData(images[1], 0);\n            this.setImageData(images[2], 1);\n\n            this.lastTime = window.performance.now(); // will be used to calculate the delta time\n            this.update(); // start the RAF\n        });\n    }\n\n    componentDidUpdate() {\n        let needsResize = !this.props.height || !this.props.width;\n        if (!this.state.loading && this.containerSlider.current) {\n            \n            this.onResize();\n        }\n    }\n\n    componentWillUnmount () {\n        window.cancelAnimationFrame(this.nextFrame)\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('keydown', this.onKeyDown);\n        window.removeEventListener('resize', this.onResize);\n        window.addEventListener('touchend', this.onMouseUp);\n        window.addEventListener('touchmove', this.onMouseMove);\n    }\n\n    onResize = () => {\n        \n        \n        let width = this.containerSlider.current.clientWidth;\n        let height = this.containerSlider.current.clientHeight;\n\n        this.width = this.props.width || width;\n        this.height = this.props.height || height;\n        this.updateComponent();\n    }\n\n    // called on resize\n    updateComponent() {\n        if (!this.slider.current) return; // needs DOM loaded\n\n        this.currentIndex = 0;\n        this.originalX = null;\n        this.resetImages(); // mainly just scale them back to the right dimensions\n\n        if (this.currentIndexPoint) { // move the slider to the right position\n            this.targetX = this.currentIndexPoint * -this.width;\n            this.cameraX = this.targetX;\n            this.update(true); // update(true) will remove ease and set the pos directy\n        }\n    }\n\n    resetImages() {\n        let items = this.slider.current.children;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            item.offsetSlider = 0;\n            if (item.dataset.url) {\n                let img = item.getElementsByTagName('img')[0];\n                this.resizeImage(img, item.dataset.url);\n            }\n        }\n    }\n\n    // get new width and height based on the original dimensions of the image (that we stored during loading)\n    getNewDimensions(url) {\n        let dim = this.orignalSizesImages[url];\n        let ratio = Math.max( this.width / dim.width, this.height / dim.height );\n        tempObject.width = dim.width * ratio;\n        tempObject.height = dim.height * ratio;\n\n        return tempObject;\n    }\n\n    resizeImage(img, url) {\n        let dim = this.getNewDimensions(url);\n        \n        img.style.width = dim.width + 'px';\n        img.style.height = dim.height + 'px';\n        img.style.marginLeft = (this.width / 2 - dim.width / 2) + 'px';\n        img.style.marginTop = (this.height / 2 - dim.height / 2) + 'px';\n    }\n\n    /*\n        MOUSE CONTROLLER\n    */\n\n   preventDefault(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    getXMouse = function(element, evt) {\n        let rect = element.getBoundingClientRect();\n        let root = document.documentElement;\n\n        let x = 0;\n        if (evt.touches) {\n            if (evt.touches[0]) x = evt.touches[0].pageX - rect.left - root.scrollLeft;\n            else x = this.lastTouchX;\n        }\n        else x = evt.clientX - rect.left - root.scrollLeft;\n\n        return x;\n    }\n    \n    onMouseDown = (e) => {\n        this._down = true;\n        // used to know how much we moved\n        this.originalX = this.getXMouse(e.currentTarget, e);\n        this.lastTouchX = this.originalX;\n    }\n    \n    onMouseMove = (e) => {\n        if (!this._down) return;\n        let x = this.getXMouse(this.containerSlider.current, e);\n        const differenceX = this.originalX - x;\n        this.targetX = this.cameraX - differenceX;\n        this.lastTouchX = x;\n        this.preventDefault(e);\n    }\n\n    onMouseUp = (e) => {\n\n        if (!this._down) return;\n\n        this._down = false;\n        let x = this.getXMouse(this.containerSlider.current, e);\n        let differenceX = (this.originalX - x) % this.width;\n\n        // use to slide to the next or cancel the slide (depending if the user slided enough to access the next image)\n        if (Math.abs(differenceX) > this.width / 3) { // this.width/3 is the current tolerance\n            if (differenceX > 0) this.targetX -= this.width - differenceX;\n            else this.targetX += differenceX + this.width;\n        }\n        else this.targetX += differenceX;\n        \n        this.cameraX = this.targetX;\n        this.preventDefault(e);\n    }\n    \n    /*\n        KEYBOARD CONTROLLER\n    */\n    onKeyDown = (e) => {\n        const keyCode = e.keyCode;\n        if (keyCode === 39) this.goTo(1);\n        else if (keyCode === 37) this.goTo(-1);\n    }\n\n    goTo(value) {\n        if (value < 0) {\n            this.targetX += this.width;\n            this.cameraX += this.width;\n        }\n        else {\n            this.targetX -= this.width;\n            this.cameraX -= this.width;\n        }\n    }\n\n    // get the url of the (current + value) slide\n    getDataUrl(value = 0) {\n        if (!this.data) return;\n        \n        let index = this.currentIndex + value;\n        if (index > this.nbImages - 1) index = 0;\n        else if (index < 0) index = this.nbImages - 1;\n        let imageData = this.data[index];\n        \n        return imageData.url;\n    }\n    \n    setImageData(element, value) {\n        let index = this.currentIndex + value;\n        if (index > this.nbImages - 1) index = 0;\n        else if (index < 0) index = this.nbImages - 1;\n        let imageData = this.data[index];\n        \n        let img = element.getElementsByTagName('img')[0];\n        let div = element.getElementsByTagName('div')[0];\n        div.innerHTML = \"\";\n        if (imageData.children) {\n            var inside = document.createElement('div');\n            inside.innerHTML = imageData.children;\n            div.appendChild(inside);\n        }\n\n        this.preload(imageData.url, () => {\n            img.src = imageData.url;\n            element.dataset.url = imageData.url;\n            element.dataset.image = img;\n            this.resizeImage(img, imageData.url);\n        });\n    }\n\n    // main loop where the magic happens\n    update = (snap) => {\n        if (!this.slider.current) return; // needs DOM\n\n        // get slider position\n        let currentX = parseFloat(this.slider.current.style.left || 0);\n\n        // extra ease if CPU stutters\n        const deltaTime = (Math.min(performance.now() - this.lastTime, 1000 / 60) * 60) / 1000;\n        let easeX = currentX + (this.targetX - currentX) * deltaTime * (snap === true ? 1 : this.props.ease || 0.3);\n\n        // set the new pos for the slider\n        this.slider.current.style.left = easeX + 'px';\n        let items = this.slider.current.children;\n        // use a temp array to not create one everyloop\n        tempArray[0] = -this.width;\n        tempArray[1] = 0;\n        tempArray[2] = this.width;\n\n        for (let index = 0; index < items.length; index++) {\n            const item = items[index];\n            \n            if (!item.offsetSlider) item.offsetSlider = 0;\n            let left = item.offsetLeft + easeX;\n\n            if (snap !== true) {\n                // conditions to reposition if needed\n                if (left < -this.width) {\n                    item.offsetSlider += this.width * 3;\n                    this.currentIndex++;\n                    this.currentIndex %= this.nbImages;\n                    this.setImageData(item, 1);\n                }\n                else if (left > this.width * 2) {\n                    item.offsetSlider -= this.width * 3;\n                    this.currentIndex--;\n                    if (this.currentIndex < 0) this.currentIndex = this.nbImages - 1;\n                    this.setImageData(item, -1)\n                }\n            }\n\n            item.style.left = (tempArray[index] + item.offsetSlider) + 'px';\n        }\n        \n        // assign correct point indicator :)\n        this.setPointActive(easeX);\n\n        if (snap !== true) {\n            this.nextFrame = window.requestAnimationFrame(this.update); // RAF\n        }\n    }\n\n    // set the correct point indicator to indicate which slide we're on\n    setPointActive(xSlider) {\n        let indexPoint = Math.round(-parseFloat(xSlider) / this.width) % this.nbImages;\n\n        if (indexPoint < 0) indexPoint += this.nbImages;\n        \n        if (this.currentIndexPoint === indexPoint || this.pointsContainer.current.children.length === 0) return;\n        if (this.currentPoint) this.currentPoint.classList.remove('active');\n        let point = this.pointsContainer.current.children[indexPoint];\n        \n        if (point) {\n            this.currentIndexPoint = indexPoint;\n            this.currentPoint = point;\n            this.currentPoint.classList.add('active');\n        }\n    }\n\n    // move to a specific slide when click on a point\n    onPointClicked = (e) => {\n        var currentTarget = e.currentTarget.dataset;\n        let index = currentTarget.index;\n\n        this.targetX = -index * this.width;\n        this.cameraX = -index * this.width;\n\n        this.preventDefault(e);\n    }\n\n    getPoints() {\n        let content = '';\n        if (this.data) {\n            content = this.data.map((img, index) => {\n                return (<div key={img.url} className='slider_point' onTouchEnd={this.onPointClicked} onClick={this.onPointClicked} data-index={index} />)\n            });\n        }\n\n        return content;\n    }\n    \n    preload(src, cb) {\n        let urls = src;\n        if (typeof src === 'string') urls = [src];\n\n        let urlsLoaded = 0;\n        for (let i = 0; i < urls.length; i++) {\n\n            // load only once\n            if (!this.orignalSizesImages[urls[i]]) {\n                this.orignalSizesImages[urls[i]] = {}\n                var img = new Image();\n                // eslint-disable-next-line no-loop-func\n                img.onload = () => {\n                    // store original width and height for when we'll need to scale images\n                    this.orignalSizesImages[urls[i]].width = img.width;\n                    this.orignalSizesImages[urls[i]].height = img.height;\n                    urlsLoaded++;\n                    if (urlsLoaded >= urls.length && cb) cb();\n                }\n                img.src = urls[i];\n            }\n            else {\n                urlsLoaded++;\n                if (urlsLoaded >= urls.length && cb) cb();\n            }\n        }\n    }\n    \n    render() {\n        var divStyle = {};\n\n        \n        if (this.props.width) divStyle.width = this.props.width;\n        if (this.props.height) divStyle.height = this.props.height;\n            \n        let content = '';\n\n        if (!this.state.loading) {\n            content = (\n                <div className='slider_container' style={divStyle} ref={this.containerSlider} onTouchStart={this.onMouseDown} onMouseDown={this.onMouseDown} >\n                    <div className='slider_mask' style={divStyle}>\n                        <div className='slider_movable' ref={this.slider}>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                        </div>\n                    </div>\n                    <div className='slider_points_container' ref={this.pointsContainer}>\n                        {this.getPoints()}\n                    </div>\n                </div>\n            )\n        }\n        else {\n            content = (\n                <img src={imgLoader} className=\"loader\" alt=\"loader\" />\n            )\n        }\n\n        return (\n            <div className='container' style={divStyle}>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport SliderPhotos from './SliderPhotos';\nimport './App.css';\nimport * as dat from 'dat.gui';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.currentState = {\n      widthContainer: window.innerWidth,\n      heightContainer: window.innerHeight,\n      useHardcodedWidth: false,\n      hardcodedWidth: 300,\n      useHardcodedHeight: false,\n      hardcodedHeight: 200\n    }\n\n    this.state = this.currentState;\n\n    const gui = new dat.GUI();\n\n    gui.add(this.currentState, 'widthContainer', 100, window.innerWidth).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'heightContainer', 100, window.innerHeight).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'useHardcodedWidth').onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'hardcodedWidth', 10, window.innerHeight).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'useHardcodedHeight').onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'hardcodedHeight', 10, window.innerHeight).onChange(this.onChange.bind(this));\n\n    this.containerSlider = React.createRef();\n  }\n\n  onChange() {\n    console.log('onchange');\n    \n    this.setState({\n      widthContainer: this.currentState.widthContainer,\n      heightContainer: this.currentState.heightContainer,\n      useHardcodedWidth: this.currentState.useHardcodedWidth,\n      hardcodedWidth: this.currentState.hardcodedWidth,\n      useHardcodedHeight: this.currentState.useHardcodedHeight,\n      hardcodedHeight: this.currentState.hardcodedHeight\n    })\n  }\n\n  render() {\n\n    // is hardcoded\n    let width = null;\n    let height = null;\n    \n    if(this.state.useHardcodedWidth) {\n      width = this.state.hardcodedWidth;\n    }\n    if(this.state.useHardcodedHeight) {\n      height = this.state.hardcodedHeight;\n    }\n\n    if(this.containerSlider.current) {\n      if (width) {\n        this.containerSlider.current.style.width = 'auto';\n      } \n      else {\n        this.containerSlider.current.style.width = this.state.widthContainer + 'px';\n      }\n      if (height) {\n        this.containerSlider.current.style.height = 'auto';\n      } \n      else {\n        this.containerSlider.current.style.height = this.state.heightContainer + 'px';\n      }\n      \n    }\n\n    const data = [\n      { url: './dog1.jpg', children: \"<div class='title'>Cute dog</div>\"},\n      { url: './dog2.jpg', children: \"<div class='title'>Cute dog 2</div>\"},\n      { url: './dog3.jpg', children: \"<div class='title'>Cute dog 3</div>\"},\n      { url: './dog4.jpg', children: \"<div class='title'>Cute dog 4</div>\"},\n      { url: './dog5.jpg', children: \"<div class='title black'>THE CUTEST</div>\"}\n    ]\n    return (\n      <div className=\"App\">\n        <div ref={this.containerSlider} className='containerSlider'>\n          <SliderPhotos width={width} height={height} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading-mark.e1014931.svg\";"],"sourceRoot":""}