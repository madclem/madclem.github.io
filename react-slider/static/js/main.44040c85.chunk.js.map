{"version":3,"sources":["SliderPhotos/index.js","App.js","serviceWorker.js","index.js","SliderPhotos/loading-mark.svg"],"names":["tempObject","tempArray","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onResize","width","containerSlider","current","clientWidth","height","clientHeight","updateComponent","getXMouse","element","evt","rect","getBoundingClientRect","root","document","documentElement","clientX","left","scrollLeft","onMouseDown","e","_down","originalX","currentTarget","onMouseMove","x","differenceX","targetX","cameraX","preventDefault","onMouseUp","Math","abs","onKeyDown","keyCode","goTo","update","snap","slider","currentX","parseFloat","style","deltaTime","min","performance","now","lastTime","easeX","ease","items","children","index","length","item","offsetSlider","offsetLeft","currentIndex","nbImages","setImageData","setPointActive","nextFrame","window","requestAnimationFrame","onPointClicked","dataset","state","loading","orignalSizesImages","React","createRef","pointsContainer","_this2","data","currentIndexPoint","addEventListener","urls","getDataUrl","preload","setState","images","console","log","cancelAnimationFrame","removeEventListener","resetImages","i","url","img","getElementsByTagName","resizeImage","dim","ratio","max","getNewDimensions","marginLeft","marginTop","stopPropagation","value","arguments","undefined","_this3","imageData","div","innerHTML","inside","createElement","appendChild","src","image","xSlider","indexPoint","round","currentPoint","classList","remove","point","add","_this4","content","map","react_default","a","key","className","onClick","data-index","cb","_this5","urlsLoaded","_loop","Image","onload","divStyle","imgLoader","alt","ref","getPoints","Component","currentState","widthContainer","innerWidth","heightContainer","innerHeight","useHardcodedWidth","hardcodedWidth","useHardcodedHeight","hardcodedHeight","gui","dat","onChange","bind","assertThisInitialized","src_SliderPhotos","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.44040c85.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/require-default-props */\nimport React, { Component } from 'react';\nimport imgLoader from './loading-mark.svg';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nlet tempObject = {};\nlet tempArray = [];\n\nclass App extends Component {\n    static propTypes = {\n        data: PropTypes.instanceOf(Array),\n        ease: PropTypes.number,\n        height: PropTypes.number,\n        width: PropTypes.number\n    }\n\n    constructor(props) {\n        super(props);\n\n        // TODOS\n        // add an infinite options (to not loop)\n        // add resizing options (for now, cover only)\n        // try on mobile\n        this.state = {\n            loading: true\n        }\n        \n        this.orignalSizesImages = {}; // used to scale correctly images\n        this.slider = React.createRef()\n        this.containerSlider = React.createRef()\n        this.pointsContainer = React.createRef()\n    }\n\n    componentDidMount() {\n        this.data = this.props.data; \n\n        this.nbImages = this.data.length;\n        this.currentIndex = 0;\n        this.currentIndexPoint = null;\n        this.cameraX = 0;\n        this.targetX = 0;\n        this.width = this.props.width;\n        this.height = this.props.height;\n        \n        let needsResize = !this.props.height || !this.props.width;\n        if (needsResize) window.addEventListener('resize', this.onResize);\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('keydown', this.onKeyDown);\n\n        // preload the first three images (left, current, right)\n        let urls = [this.getDataUrl(-1), this.getDataUrl(0), this.getDataUrl(1)]\n        this.preload(urls, () => {\n            this.setState({\n                loading: false\n            });\n\n            // noew they're loaded, set the images\n            let images = this.slider.current.children;\n            this.setImageData(images[0], -1);\n            this.setImageData(images[1], 0);\n            this.setImageData(images[2], 1);\n\n            this.lastTime = window.performance.now(); // will be used to calculate the delta time\n            this.update(); // start the RAF\n        });\n    }\n\n    componentDidUpdate() {\n        let needsResize = !this.props.height || !this.props.width;\n        console.log('didUpdate', this.props.height, this.props.width);\n        if (!this.state.loading && this.containerSlider.current) {\n            \n            this.onResize();\n        }\n    }\n\n    componentWillUnmount () {\n        window.cancelAnimationFrame(this.nextFrame)\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('keydown', this.onKeyDown);\n        window.removeEventListener('resize', this.onResize)\n    }\n\n    onResize = () => {\n        \n        \n        let width = this.containerSlider.current.clientWidth;\n        let height = this.containerSlider.current.clientHeight;\n\n        this.width = this.props.width || width;\n        this.height = this.props.height || height;\n        this.updateComponent();\n    }\n\n    // called on resize\n    updateComponent() {\n        if (!this.slider.current) return; // needs DOM loaded\n\n        this.currentIndex = 0;\n        this.originalX = null;\n        this.resetImages(); // mainly just scale them back to the right dimensions\n\n        if (this.currentIndexPoint) { // move the slider to the right position\n            this.targetX = this.currentIndexPoint * -this.width;\n            this.cameraX = this.targetX;\n            this.update(true); // update(true) will remove ease and set the pos directy\n        }\n    }\n\n    resetImages() {\n        let items = this.slider.current.children;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            item.offsetSlider = 0;\n            if (item.dataset.url) {\n                let img = item.getElementsByTagName('img')[0];\n                this.resizeImage(img, item.dataset.url);\n            }\n        }\n    }\n\n    // get new width and height based on the original dimensions of the image (that we stored during loading)\n    getNewDimensions(url) {\n        let dim = this.orignalSizesImages[url];\n        let ratio = Math.max( this.width / dim.width, this.height / dim.height );\n        tempObject.width = dim.width * ratio;\n        tempObject.height = dim.height * ratio;\n\n        return tempObject;\n    }\n\n    resizeImage(img, url) {\n        let dim = this.getNewDimensions(url);\n        \n        img.style.width = dim.width + 'px';\n        img.style.height = dim.height + 'px';\n        img.style.marginLeft = (this.width / 2 - dim.width / 2) + 'px';\n        img.style.marginTop = (this.height / 2 - dim.height / 2) + 'px';\n    }\n\n    /*\n        MOUSE CONTROLLER\n    */\n\n   preventDefault(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    getXMouse = function(element, evt) {\n        let rect = element.getBoundingClientRect();\n        let root = document.documentElement;\n        let x = evt.clientX - rect.left - root.scrollLeft;\n\n        return x;\n    }\n    \n    onMouseDown = (e) => {\n        this._down = true;\n        // used to know how much we moved\n        this.originalX = this.getXMouse(e.currentTarget, e);\n    }\n    \n    onMouseMove = (e) => {\n\n        if (!this._down) return;\n        \n        let x = this.getXMouse(this.containerSlider.current, e);\n        const differenceX = this.originalX - x;\n        this.targetX = this.cameraX - differenceX;\n        this.preventDefault(e);\n    }\n\n    onMouseUp = (e) => {\n\n        if (!this._down) return;\n\n        this._down = false;\n        let x = this.getXMouse(this.containerSlider.current, e);\n        let differenceX = (this.originalX - x) % this.width;\n\n        // use to slide to the next or cancel the slide (depending if the user slided enough to access the next image)\n        if (Math.abs(differenceX) > this.width / 3) { // this.width/3 is the current tolerance\n            if (differenceX > 0) this.targetX -= this.width - differenceX;\n            else this.targetX += differenceX + this.width;\n        }\n        else this.targetX += differenceX;\n        \n        this.cameraX = this.targetX;\n        this.preventDefault(e);\n    }\n    \n    /*\n        KEYBOARD CONTROLLER\n    */\n    onKeyDown = (e) => {\n        const keyCode = e.keyCode;\n        if (keyCode === 39) this.goTo(1);\n        else if (keyCode === 37) this.goTo(-1);\n    }\n\n    goTo(value) {\n        if (value < 0) {\n            this.targetX += this.width;\n            this.cameraX += this.width;\n        }\n        else {\n            this.targetX -= this.width;\n            this.cameraX -= this.width;\n        }\n    }\n\n    // get the url of the (current + value) slide\n    getDataUrl(value = 0) {\n        if (!this.data) return;\n        \n        let index = this.currentIndex + value;\n        if (index > this.nbImages - 1) index = 0;\n        else if (index < 0) index = this.nbImages - 1;\n        let imageData = this.data[index];\n        \n        return imageData.url;\n    }\n    \n    setImageData(element, value) {\n        let index = this.currentIndex + value;\n        if (index > this.nbImages - 1) index = 0;\n        else if (index < 0) index = this.nbImages - 1;\n        let imageData = this.data[index];\n        \n        let img = element.getElementsByTagName('img')[0];\n        let div = element.getElementsByTagName('div')[0];\n        div.innerHTML = \"\";\n        if (imageData.children) {\n            var inside = document.createElement('div');\n            inside.innerHTML = imageData.children;\n            div.appendChild(inside);\n        }\n\n        this.preload(imageData.url, () => {\n            img.src = imageData.url;\n            element.dataset.url = imageData.url;\n            element.dataset.image = img;\n            this.resizeImage(img, imageData.url);\n        });\n    }\n\n    // main loop where the magic happens\n    update = (snap) => {\n        if (!this.slider.current) return; // needs DOM\n\n        // get slider position\n        let currentX = parseFloat(this.slider.current.style.left || 0);\n\n        // extra ease if CPU stutters\n        const deltaTime = (Math.min(performance.now() - this.lastTime, 1000 / 60) * 60) / 1000;\n        let easeX = currentX + (this.targetX - currentX) * deltaTime * (snap === true ? 1 : this.props.ease || 0.3);\n\n        // set the new pos for the slider\n        this.slider.current.style.left = easeX + 'px';\n        let items = this.slider.current.children;\n        // use a temp array to not create one everyloop\n        tempArray[0] = -this.width;\n        tempArray[1] = 0;\n        tempArray[2] = this.width;\n\n        for (let index = 0; index < items.length; index++) {\n            const item = items[index];\n            \n            if (!item.offsetSlider) item.offsetSlider = 0;\n            let left = item.offsetLeft + easeX;\n\n            if (snap !== true) {\n                // conditions to reposition if needed\n                if (left < -this.width) {\n                    item.offsetSlider += this.width * 3;\n                    this.currentIndex++;\n                    this.currentIndex %= this.nbImages;\n                    this.setImageData(item, 1);\n                }\n                else if (left > this.width * 2) {\n                    item.offsetSlider -= this.width * 3;\n                    this.currentIndex--;\n                    if (this.currentIndex < 0) this.currentIndex = this.nbImages - 1;\n                    this.setImageData(item, -1)\n                }\n            }\n\n            item.style.left = (tempArray[index] + item.offsetSlider) + 'px';\n        }\n        \n        // assign correct point indicator :)\n        this.setPointActive(easeX);\n        this.nextFrame = window.requestAnimationFrame(this.update); // RAF\n    }\n\n    // set the correct point indicator to indicate which slide we're on\n    setPointActive(xSlider) {\n        let indexPoint = Math.round(-parseFloat(xSlider) / this.width) % this.nbImages;\n\n        if (indexPoint < 0) indexPoint += this.nbImages;\n        \n        if (this.currentIndexPoint === indexPoint || this.pointsContainer.current.children.length === 0) return;\n        if (this.currentPoint) this.currentPoint.classList.remove('active');\n        let point = this.pointsContainer.current.children[indexPoint];\n        \n        if (point) {\n            this.currentIndexPoint = indexPoint;\n            this.currentPoint = point;\n            this.currentPoint.classList.add('active');\n        }\n    }\n\n    // move to a specific slide when click on a point\n    onPointClicked = (e) => {\n        var currentTarget = e.currentTarget.dataset;\n        let index = currentTarget.index;\n\n        this.targetX = -index * this.width;\n        this.cameraX = -index * this.width;\n\n        this.preventDefault(e);\n    }\n\n    getPoints() {\n        let content = '';\n        if (this.data) {\n            content = this.data.map((img, index) => {\n                return (<div key={img.url} className='slider_point' onClick={this.onPointClicked} data-index={index} />)\n            });\n        }\n\n        return content;\n    }\n    \n    preload(src, cb) {\n        let urls = src;\n        if (typeof src === 'string') urls = [src];\n\n        let urlsLoaded = 0;\n        for (let i = 0; i < urls.length; i++) {\n\n            // load only once\n            if (!this.orignalSizesImages[urls[i]]) {\n                this.orignalSizesImages[urls[i]] = {}\n                var img = new Image();\n                // eslint-disable-next-line no-loop-func\n                img.onload = () => {\n                    // store original width and height for when we'll need to scale images\n                    this.orignalSizesImages[urls[i]].width = img.width;\n                    this.orignalSizesImages[urls[i]].height = img.height;\n                    urlsLoaded++;\n                    if (urlsLoaded >= urls.length && cb) cb();\n                }\n                img.src = urls[i];\n            }\n            else {\n                urlsLoaded++;\n                if (urlsLoaded >= urls.length && cb) cb();\n            }\n        }\n    }\n    \n    render() {\n        var divStyle = {};\n\n        console.log('render slider');\n        \n        if (this.props.width) divStyle.width = this.props.width;\n        if (this.props.height) divStyle.height = this.props.height;\n            \n        let content = '';\n\n        if (!this.state.loading) {\n            content = (\n                <div className='slider_container' style={divStyle} ref={this.containerSlider} onMouseDown={this.onMouseDown} >\n                    <div className='slider_mask' style={divStyle}>\n                        <div className='slider_movable' ref={this.slider}>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                            <div className='image_slider'><img alt='photoproduct' /> <div className='slider_image_children' /></div>\n                        </div>\n                    </div>\n                    <div className='slider_points_container' ref={this.pointsContainer}>\n                        {this.getPoints()}\n                    </div>\n                </div>\n            )\n        }\n        else {\n            content = (\n                <img src={imgLoader} className=\"loader\" alt=\"loader\" />\n            )\n        }\n\n        return (\n            <div className='container' style={divStyle}>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport SliderPhotos from './SliderPhotos';\nimport './App.css';\nimport * as dat from 'dat.gui';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.currentState = {\n      widthContainer: window.innerWidth,\n      heightContainer: window.innerHeight,\n      useHardcodedWidth: false,\n      hardcodedWidth: 300,\n      useHardcodedHeight: false,\n      hardcodedHeight: 200\n    }\n\n    this.state = this.currentState;\n\n    const gui = new dat.GUI();\n\n    gui.add(this.currentState, 'widthContainer', 100, window.innerWidth).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'heightContainer', 100, window.innerHeight).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'useHardcodedWidth').onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'hardcodedWidth', 10, window.innerHeight).onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'useHardcodedHeight').onChange(this.onChange.bind(this));\n    gui.add(this.currentState, 'hardcodedHeight', 10, window.innerHeight).onChange(this.onChange.bind(this));\n\n    this.containerSlider = React.createRef();\n  }\n\n  onChange() {\n    console.log('onchange');\n    \n    this.setState({\n      widthContainer: this.currentState.widthContainer,\n      heightContainer: this.currentState.heightContainer,\n      useHardcodedWidth: this.currentState.useHardcodedWidth,\n      hardcodedWidth: this.currentState.hardcodedWidth,\n      useHardcodedHeight: this.currentState.useHardcodedHeight,\n      hardcodedHeight: this.currentState.hardcodedHeight\n    })\n  }\n\n  render() {\n\n    // is hardcoded\n    let width = null;\n    let height = null;\n    \n    if(this.state.useHardcodedWidth) {\n      width = this.state.hardcodedWidth;\n    }\n    if(this.state.useHardcodedHeight) {\n      height = this.state.hardcodedHeight;\n    }\n\n    if(this.containerSlider.current) {\n      if (width) {\n        this.containerSlider.current.style.width = 'auto';\n      } \n      else {\n        this.containerSlider.current.style.width = this.state.widthContainer + 'px';\n      }\n      if (height) {\n        this.containerSlider.current.style.height = 'auto';\n      } \n      else {\n        this.containerSlider.current.style.height = this.state.heightContainer + 'px';\n      }\n      \n    }\n\n    const data = [\n      { url: '/dog1.jpg', children: \"<div class='title'>Cute dog</div>\"},\n      { url: '/dog2.jpg', children: \"<div class='title'>Cute dog 2</div>\"},\n      { url: '/dog3.jpg', children: \"<div class='title'>Cute dog 3</div>\"},\n      { url: '/dog4.jpg', children: \"<div class='title'>Cute dog 4</div>\"},\n      { url: '/dog5.jpg', children: \"<div class='title black'>THE CUTEST</div>\"}\n    ]\n    return (\n      <div className=\"App\">\n        <div ref={this.containerSlider} className='containerSlider'>\n          <SliderPhotos width={width} height={height} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading-mark.e1014931.svg\";"],"sourceRoot":""}